{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ruan\\\\Documents\\\\Frontend\\\\Projetos\\\\netflixcopycat\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeatureMovie from './components/FeatureMovie';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n  const [featureData, setFeatureData] = useState(null);\n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegar a lista TOTAL\n      let list = await tmdb.getHomeList();\n      setMovieList(list); //Pegar filme em destaque\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeatureData(chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [featureData && /*#__PURE__*/_jsxDEV(FeatureMovie, {\n      item: featureData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(MovieRow, {\n        title: item.title,\n        items: item.items\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}, \"8qL0qSgMvkjer2zt/+yOSM7VpIk=\");","map":{"version":3,"sources":["C:/Users/Ruan/Documents/Frontend/Projetos/netflixcopycat/src/App.js"],"names":["React","useEffect","useState","tmdb","MovieRow","FeatureMovie","Header","movieList","setMovieList","featureData","setFeatureData","loadAll","list","getHomeList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","map","item","key","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,kBAAe,MAAM;AAAA;;AAEnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;AAEFD,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMU,OAAO,GAAG,YAAY;AAC1B;AACA,UAAIC,IAAI,GAAG,MAAMT,IAAI,CAACU,WAAL,EAAjB;AACAL,MAAAA,YAAY,CAACI,IAAD,CAAZ,CAH0B,CAK1B;;AACA,UAAIE,SAAS,GAAGF,IAAI,CAACG,MAAL,CAAYC,CAAC,IAAEA,CAAC,CAACC,IAAF,KAAS,WAAxB,CAAhB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,GAAmC,CAAlD,CAAX,CAAnB;AACA,UAAIC,MAAM,GAAGX,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BL,YAA3B,CAAb;AACA,UAAIQ,UAAU,GAAG,MAAMvB,IAAI,CAACwB,YAAL,CAAkBF,MAAM,CAACG,EAAzB,EAA6B,IAA7B,CAAvB;AACAlB,MAAAA,cAAc,CAACgB,UAAD,CAAd;AACD,KAXD;;AAaAf,IAAAA,OAAO;AACR,GAfQ,EAeN,EAfM,CAAT;AAiBE,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eAIGF,WAAW,iBACV,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YALJ,eAQE;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,gBACGF,SAAS,CAACsB,GAAV,CAAc,CAACC,IAAD,EAAMC,GAAN,kBACd,QAAC,QAAD;AAAoB,QAAA,KAAK,EAAED,IAAI,CAACE,KAAhC;AAAuC,QAAA,KAAK,EAAEF,IAAI,CAACR;AAAnD,SAAeS,GAAf;AAAA;AAAA;AAAA;AAAA,cADA;AADH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAtCD","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeatureMovie from './components/FeatureMovie';\nimport Header from './components/Header';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featureData, setFeatureData] = useState(null);\n\nuseEffect(()=>{\n  const loadAll = async () => {\n    //Pegar a lista TOTAL\n    let list = await tmdb.getHomeList();\n    setMovieList(list);\n\n    //Pegar filme em destaque\n    let originals = list.filter(i=>i.slug==='originals');\n    let randomChosen = Math.floor(Math.random()*(originals[0].items.results.length -1))\n    let chosen = originals[0].items.results[randomChosen];\n    let chosenInfo = await tmdb.getMovieInfo(chosen.id, 'tv');\n    setFeatureData(chosenInfo);\n  }\n\n  loadAll();\n}, [])\n\n  return(\n    <div className='page'>\n\n      \n\n      {featureData &&\n        <FeatureMovie item={featureData}/>\n      }\n\n      <section className='lists'>\n        {movieList.map((item,key)=>(\n         <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}