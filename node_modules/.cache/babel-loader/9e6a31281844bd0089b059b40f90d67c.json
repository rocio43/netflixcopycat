{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\Ruan\\\\Documents\\\\Frontend\\\\Projetos\\\\netflixcopycat\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\Ruan\\\\Documents\\\\Frontend\\\\Projetos\\\\netflixcopycat\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Ruan\\\\Documents\\\\Frontend\\\\Projetos\\\\netflixcopycat\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState}from'react';import'./App.css';import tmdb from'./Tmdb';import MovieRow from'./components/MovieRow';import FeatureMovie from'./components/FeatureMovie';import Header from'./components/Header';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default(function(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movieList=_useState2[0],setMovieList=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),featureData=_useState4[0],setFeatureData=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),blackHeader=_useState6[0],setBlackHeader=_useState6[1];useEffect(function(){var loadAll=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var list,originals,randomChosen,chosen,chosenInfo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return tmdb.getHomeList();case 2:list=_context.sent;setMovieList(list);//Pegar filme em destaque\noriginals=list.filter(function(i){return i.slug==='originals';});randomChosen=Math.floor(Math.random()*(originals[0].items.results.length-1));chosen=originals[0].items.results[randomChosen];_context.next=9;return tmdb.getMovieInfo(chosen.id,'tv');case 9:chosenInfo=_context.sent;setFeatureData(chosenInfo);case 11:case\"end\":return _context.stop();}}},_callee);}));return function loadAll(){return _ref.apply(this,arguments);};}();loadAll();},[]);useEffect(function(){var scrollListener=function scrollListener(){if(window.scrollY>10){setBlackHeader(true);}else{setBlackHeader(false);}};window.addEventListener('scroll',scrollListener);return function(){window.removeEventListener('scroll',scrollListener);};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(Header,{black:blackHeader}),featureData&&/*#__PURE__*/_jsx(FeatureMovie,{item:featureData}),/*#__PURE__*/_jsx(\"section\",{className:\"lists\",children:movieList.map(function(item,key){return/*#__PURE__*/_jsx(MovieRow,{title:item.title,items:item.items},key);})}),/*#__PURE__*/_jsxs(\"footer\",{children:[\"Copycat feito por Ruan\",/*#__PURE__*/_jsx(\"br\",{}),\"Direitos de imagem para Netflix\",/*#__PURE__*/_jsx(\"br\",{}),\"Dados do site Themoviedb.org\"]})]});});","map":{"version":3,"sources":["C:/Users/Ruan/Documents/Frontend/Projetos/netflixcopycat/src/App.js"],"names":["React","useEffect","useState","tmdb","MovieRow","FeatureMovie","Header","movieList","setMovieList","featureData","setFeatureData","blackHeader","setBlackHeader","loadAll","getHomeList","list","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","getMovieInfo","id","chosenInfo","scrollListener","window","scrollY","addEventListener","removeEventListener","map","item","key","title"],"mappings":"gdAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,C,wFAEA,eAAe,UAAM,CAEnB,cAAkCJ,QAAQ,CAAC,EAAD,CAA1C,wCAAOK,SAAP,eAAkBC,YAAlB,eACA,eAAsCN,QAAQ,CAAC,IAAD,CAA9C,yCAAOO,WAAP,eAAoBC,cAApB,eACA,eAAsCR,QAAQ,CAAC,KAAD,CAA9C,yCAAOS,WAAP,eAAoBC,cAApB,eAEAX,SAAS,CAAC,UAAI,CACZ,GAAMY,CAAAA,OAAO,0FAAG,2MAEGV,CAAAA,IAAI,CAACW,WAAL,EAFH,QAEVC,IAFU,eAGdP,YAAY,CAACO,IAAD,CAAZ,CAEA;AACIC,SANU,CAMED,IAAI,CAACE,MAAL,CAAY,SAAAC,CAAC,QAAEA,CAAAA,CAAC,CAACC,IAAF,GAAS,WAAX,EAAb,CANF,CAOVC,YAPU,CAOKC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAeP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,CAAmC,CAAlD,CAAX,CAPL,CAQVC,MARU,CAQDX,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BL,YAA3B,CARC,uBASSjB,CAAAA,IAAI,CAACyB,YAAL,CAAkBD,MAAM,CAACE,EAAzB,CAA6B,IAA7B,CATT,QASVC,UATU,eAUdpB,cAAc,CAACoB,UAAD,CAAd,CAVc,uDAAH,kBAAPjB,CAAAA,OAAO,0CAAb,CAaAA,OAAO,GACR,CAfQ,CAeN,EAfM,CAAT,CAiBAZ,SAAS,CAAC,UAAI,CACZ,GAAM8B,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,GAAGC,MAAM,CAACC,OAAP,CAAe,EAAlB,CAAqB,CACnBrB,cAAc,CAAC,IAAD,CAAd,CACD,CAFD,IAEK,CACHA,cAAc,CAAC,KAAD,CAAd,CACD,CACF,CAND,CAQAoB,MAAM,CAACE,gBAAP,CAAwB,QAAxB,CAAkCH,cAAlC,EAEA,MAAO,WAAI,CACTC,MAAM,CAACG,mBAAP,CAA2B,QAA3B,CAAoCJ,cAApC,EACD,CAFD,CAID,CAfQ,CAeN,EAfM,CAAT,CAiBA,mBACE,aAAK,SAAS,CAAC,MAAf,wBAEE,KAAC,MAAD,EAAQ,KAAK,CAAEpB,WAAf,EAFF,CAIGF,WAAW,eACV,KAAC,YAAD,EAAc,IAAI,CAAEA,WAApB,EALJ,cAQE,gBAAS,SAAS,CAAC,OAAnB,UACGF,SAAS,CAAC6B,GAAV,CAAc,SAACC,IAAD,CAAMC,GAAN,qBACd,KAAC,QAAD,EAAoB,KAAK,CAAED,IAAI,CAACE,KAAhC,CAAuC,KAAK,CAAEF,IAAI,CAACb,KAAnD,EAAec,GAAf,CADc,EAAd,CADH,EARF,cAaE,gEACwB,aADxB,gDAEiC,aAFjC,kCAbF,GADF,CAqBD,CA7DD","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeatureMovie from './components/FeatureMovie';\nimport Header from './components/Header';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featureData, setFeatureData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(()=>{\n    const loadAll = async () => {\n      //Pegar a lista TOTAL\n      let list = await tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegar filme em destaque\n      let originals = list.filter(i=>i.slug==='originals');\n      let randomChosen = Math.floor(Math.random()*(originals[0].items.results.length -1))\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeatureData(chosenInfo);\n    }\n\n    loadAll();\n  }, [])\n\n  useEffect(()=>{\n    const scrollListener = () => {\n      if(window.scrollY>10){\n        setBlackHeader(true);\n      }else{\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return ()=>{\n      window.removeEventListener('scroll',scrollListener);\n    }\n\n  }, []);\n\n  return(\n    <div className='page'>\n\n      <Header black={blackHeader}/>\n\n      {featureData &&\n        <FeatureMovie item={featureData}/>\n      }\n\n      <section className='lists'>\n        {movieList.map((item,key)=>(\n         <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n      <footer>\n        Copycat feito por Ruan<br/>\n        Direitos de imagem para Netflix<br/>\n        Dados do site Themoviedb.org\n      </footer>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}