[{"C:\\Users\\Ruan\\Documents\\Frontend\\Projetos\\netflixcopycat\\src\\index.js":"1","C:\\Users\\Ruan\\Documents\\Frontend\\Projetos\\netflixcopycat\\src\\App.js":"2","C:\\Users\\Ruan\\Documents\\Frontend\\Projetos\\netflixcopycat\\src\\tmdb.js":"3","C:\\Users\\Ruan\\Documents\\Frontend\\Projetos\\netflixcopycat\\src\\Tmdb.js":"4","C:\\Users\\Ruan\\Documents\\Frontend\\Projetos\\netflixcopycat\\src\\components\\Header.js":"5","C:\\Users\\Ruan\\Documents\\Frontend\\Projetos\\netflixcopycat\\src\\components\\FilmeDestaque.js":"6","C:\\Users\\Ruan\\Documents\\Frontend\\Projetos\\netflixcopycat\\src\\components\\ListaFilme.js":"7"},{"size":198,"mtime":1642892441834,"results":"8","hashOfConfig":"9"},{"size":1351,"mtime":1643063827525,"results":"10","hashOfConfig":"9"},{"size":2689,"mtime":1642963260529,"results":"11","hashOfConfig":"9"},{"size":2567,"mtime":1643063505666,"results":"12","hashOfConfig":"9"},{"size":672,"mtime":1642970026766,"results":"13","hashOfConfig":"9"},{"size":1654,"mtime":1643063404074,"results":"14","hashOfConfig":"9"},{"size":1769,"mtime":1643063452808,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ercviy",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\Ruan\\Documents\\Frontend\\Projetos\\netflixcopycat\\src\\index.js",[],["36","37"],"C:\\Users\\Ruan\\Documents\\Frontend\\Projetos\\netflixcopycat\\src\\App.js",["38","39"],"import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport tmdb from './Tmdb';\nimport ListaFilme from './components/ListaFilme';\nimport FilmeDestaque from './components/FilmeDestaque';\nimport Header from './components/Header';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [DataDestaque, setDataDestaque] = useState(null);\n  \n  useEffect(()=>{\n    const loadAll = async () => {\n      \n      let list = await tmdb.getHomeList();\n      setMovieList(list);\n\n      \n      let originals = list.filter(i=>i.slug==='originals');\n      let randomChosen = Math.floor(Math.random()*(originals[0].itens.results.length -1))\n      let chosen = originals[0].itens.results[randomChosen];\n      let chosenInfo = await tmdb.getMovieInfo(chosen.id, 'tv');\n      setDataDestaque(chosenInfo);\n    }\n\n    loadAll();\n  }, [])\n\n  useEffect(()=>{\n    \n    \n  }, []);\n\n  return(\n    <div className='page'>\n\n      {DataDestaque &&\n        <FilmeDestaque item={DataDestaque}/>\n      }\n\n      <section className='lists'>\n        {movieList.map((item,key)=>(\n         <ListaFilme key={key} title={item.title} itens={item.itens} />\n        ))}\n      </section>\n      <footer>\n        Copycat feito por Ruan<br/>\n        Direitos de imagem para Netflix<br/>\n        Dados do site Themoviedb.org\n      </footer>\n    </div>\n  )\n}","C:\\Users\\Ruan\\Documents\\Frontend\\Projetos\\netflixcopycat\\src\\tmdb.js",["40"],"C:\\Users\\Ruan\\Documents\\Frontend\\Projetos\\netflixcopycat\\src\\Tmdb.js",["41"],"const API_KEY = 'a40d2b03171e84f4b04202aa8a269738';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return[\r\n            {\r\n                slug:'originals',\r\n                title:'Originais da Netflix',\r\n                itens: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'trending',\r\n                title:'Recomendados',\r\n                itens:await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'toprated',\r\n                title:'Em alta',\r\n                itens:await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'action',\r\n                title:'Ação',\r\n                itens:await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'comedy',\r\n                title:'Comédia',\r\n                itens:await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'horror',\r\n                title:'Terror',\r\n                itens:await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'romance',\r\n                title:'Romance',\r\n                itens:await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'documentary',\r\n                title:'Documentários',\r\n                itens:await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ];\r\n    },\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break\r\n                default:\r\n                    info = null;\r\n                break\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n}","C:\\Users\\Ruan\\Documents\\Frontend\\Projetos\\netflixcopycat\\src\\components\\Header.js",["42"],"import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n    return(\r\n        <header className={black?'black':''}>\r\n            <div className='header--logo'>\r\n                <a href='/'>\r\n                    <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/7/7a/Logonetflix.png/640px-Logonetflix.png' alt='Netflix'/>\r\n             </a>\r\n            </div>\r\n            <div className='header--user'>\r\n                <a href='/'>\r\n                    <img src='https://i.pinimg.com/originals/fb/8e/8a/fb8e8a96fca2f049334f312086a6e2f6.png' alt='Usuário'/>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    );\r\n}","C:\\Users\\Ruan\\Documents\\Frontend\\Projetos\\netflixcopycat\\src\\components\\FilmeDestaque.js",["43"],"import React from 'react';\r\nimport './FilmeDestaque.css';\r\n\r\nexport default ({item}) => {\r\n\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n    for(let i in item.genres){\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    return (\r\n        <section className=\"featured\"style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`  \r\n        }}>\r\n            <div className='featured--vertical'>\r\n                <div className='featured--horizontal'>\r\n                    <div className='featured--name'>{item.original_name}</div>\r\n                    <div className='featured--info'>\r\n                        <div className='featured--points'>{item.vote_average} pontos</div>\r\n                        <div className='featured--year'>{firstDate.getFullYear()}</div> \r\n                        <div className='featured--seasons'>{item.number_of_seasons} temporada{item.number_of_seasons!==1?'s':''}</div> \r\n                    </div>\r\n                    <div className='featured--description'>{item.overview}</div>\r\n                    <div className='featured--buttons'>\r\n                        <a href={`/watch/${item.id}`} className='featured--watchbutton'>► Assitir</a>\r\n                        <a href={`/list/add/${item.id}`}className='featured--mylistbutton'>+ Minha Lista</a>\r\n                    </div>\r\n                    <div className='featured--genres'><strong>Gêneros:</strong> {genres.join(', ')}</div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}","C:\\Users\\Ruan\\Documents\\Frontend\\Projetos\\netflixcopycat\\src\\components\\ListaFilme.js",["44"],"import React, { useState } from 'react';\r\nimport './ListaFilme.css';\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nexport default ({title, itens}) => {\r\n    const [scrollX, setScrollX] = useState(0);\r\n\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth/2);\r\n        if(x > 0){\r\n            x=0;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n    const handleRightArrow = () => {\r\n        let x = scrollX - Math.round(window.innerWidth/2);\r\n        let listW = itens.results.length * 150;\r\n        if(window.innerWidth - listW > x){\r\n            x=(window.innerWidth - listW)-60;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n\r\n    return(\r\n        <div className='ListaFilme'>\r\n            <h2>{title}</h2>\r\n            <div className='ListaFilme--left' onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{fontSize: 50}}/>\r\n            </div>\r\n            <div className='ListaFilme--right' onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{fontSize: 50}}/>\r\n            </div>\r\n            <div className='ListaFilme--listarea'>\r\n                <div className='ListaFilme--list' style={{\r\n                    marginLeft: scrollX,\r\n                    width: itens.results.length * 150\r\n                }}>\r\n                    {itens.results.length > 0 && itens.results.map((item, key)=>(\r\n                        <div className='ListaFilme--item'>\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":6,"column":8,"nodeType":"51","messageId":"52","endLine":6,"endColumn":14},{"ruleId":"53","severity":1,"message":"54","line":8,"column":1,"nodeType":"55","endLine":54,"endColumn":2},{"ruleId":"53","severity":1,"message":"56","line":21,"column":1,"nodeType":"55","endLine":66,"endColumn":2},{"ruleId":"53","severity":1,"message":"56","line":10,"column":1,"nodeType":"55","endLine":74,"endColumn":2},{"ruleId":"53","severity":1,"message":"54","line":4,"column":1,"nodeType":"55","endLine":19,"endColumn":2},{"ruleId":"53","severity":1,"message":"54","line":4,"column":1,"nodeType":"55","endLine":37,"endColumn":2},{"ruleId":"53","severity":1,"message":"54","line":6,"column":1,"nodeType":"55","endLine":48,"endColumn":2},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]